%TAG !num! num # Tag for VNums
---
# Replace List\[VAny\]\((.+)\) -> (.+?),?$ with - { in: [$1], out: $2 }
# Replace VNum\((-?\d+)\) with $1

"@":
  - {in: [[1,2,3,4,5]], out: [1,3,6,10,15]}
  - {in: [[]], out: []}

"*":
  when given two numbers:
    - { in: [3, 2], out: 9 }
    - { in: [0, 1], out: 0 }
    - { in: [2, -1], out: 0.5 }
    - { in: [5.1, 4.2], out: 937.11899215207 }
    - { in: [3, 0], out: 1 }
    - { in: [0, 0], out: 1 }
  when given a string and a number:
    - { in: ["the fitnessgram pacer test", 6], out: "the finessgram pacer test" }
    - { in: [4.2, "airpod shotty"], out: "airpd shotty" }
    - { in: ["sussy baka", 0], out: "ussy baka" }
    - { in: ["sussy baka", -1], out: "sussy bak" }
    - { in: ["vyxal", 7], out: "vyal" }
  when given two strings:
    - { in: ["abcdefabc", "abc"], out: "def" }
    - { in: ["abc", "abcdefabc"], out: "abc" }
    - { in: ["abc", "abc"], out: "" }
    - { in: ["abcdefabc", ""], out: "abcdefabc" }

"+":
  - { in: ["1", 2], out: "12" }
  - { in: ["foo", "bar"], out: "foobar" }
  - { in: [[1, "a", []], 3], out: [4, "a3", []] }
  - { in: [[[2, 5], "foo"], [[3, 4]]], out: [[5, 9], "foo0"] }
  - { in: [5.1, -45.4], out: -40.3 }
  - { in: ["foo", 3], out: "foo3" }
  - { in: [3, "foo"], out: "3foo" }
  - { in: [0.1, 0.2], out: 0.3 }
  - in:
      - !num 0ı2
      - !num 3ı3
    out: !num 3ı5

"-":
  when given two numbers:
    - { in: [420, 69], out: 351 }
    - { in: [420, -69], out: 489 }
    - { in: [6.9, 4.2], out: 2.7 }
    - in:
        - !num 9ı5
        - !num 3ı3
      out: !num 6ı2
  when given a string and a number:
    - { in: ["Hello, World", 5], out: "Hello, World-----" }
    - { in: ["Hello, World", 5.2], out: "Hello, World-----" }
    - { in: ["Hello, World", -5], out: "-----Hello, World" }
    - { in: ["Hello, World", 0], out: "Hello, World" }
    - { in: [5, "Hello, World"], out: "-----Hello, World" }
  when given two strings:
    - { in: ["Hello, World", "Hello, "], out: "World" }
    - { in: ["Hello, World", "World"], out: "Hello, " }
    - { in: ["Hello, World", "Hello, World"], out: "" }
    - { in: ["Hello, World", "Hello, World!"], out: "Hello, World" }
    - { in: ["abcbde", "b"], out: "acde" }
    - { in: ["aaa", "a"], out: "" }
    - { in: ["Hello, World", ""], out: "Hello, World" }

";":
  - { in: [1, 2, 3], out: [2, 3] }
  - { in: [1, 2, 3, 4], out: [3, 4] }
  - { in: [1, 2, 3, 4, 5], out: [4, 5] }

"<":
  With numbers:
    - { in: [1, 2], out: 1 }
    - { in: [1, 1], out: 0 }
    - { in: [2, 1], out: 0 }
    - in:
        - !num 1ı50
        - 2
      out: 1
  Should stringify:
    - { in: ["abc", 1], out: 0 }
    - { in: [20, "3"], out: 1 }
    - { in: ["ABC", "abc"], out: 1 }
  Should vectorise:
    - { in: [[1, [2, 4], -5], 3], out: [1, [1, 0], 1] }
    - { in: [[6, "foo"], [4, 20]], out: [0, 0] }

">":
  With numbers:
    - { in: [1, 2], out: 0 }
    - { in: [1, 1], out: 0 }
    - { in: [2, 1], out: 1 }
    - { in: [1.5, 2], out: 0 } # How to represent complex numbers?
  Should stringify:
    - { in: ["abc", 1], out: 1 }
    - { in: [20, "3"], out: 0 }
    - { in: ["ABC", "abc"], out: 0 }
  Should vectorise:
    - { in: [[1, [2, 4], -5], 3], out: [0, [0, 1], 0] }
    - { in: [[6, "foo"], [4, 20]], out: [1, 1] }

"A":
  when given a list:
    - { in: [[1, 391, "dqw4w9wgxcq", [0]]], out: 1 }
    - { in: [[0, 69420, []]], out: 0 }
  when given a single-character string:
    - { in: ["a"], out: 1 }
    - { in: ["E"], out: 1 }
    - { in: ["y"], out: 0 }
  when given a multi-character string:
    - { in: ["asdEy"], out: [1, 0, 0, 1, 0] }

"B":
  when given a number:
    - { in: [110], out: 6 }
    - { in: [1000], out: 8 }
    - { in: [69], out: 21 }
    - { in: [69420], out: 188 }
    - { in: [-7654], out: -94 }
    - { in: [-111], out: -7 }
  when given a string:
    - { in: ["110"], out: 6 }
    - { in: ["1000"], out: 8 }
    - { in: ["69"], out: 21 }
    - { in: ["69420"], out: 188 }
    - { in: ["-7654"], out: -94 }
    - { in: ["-111"], out: -7 }
  when given a list:
    - { in: [[1, 1, 0]], out: 6 }
    - { in: [[1, 0, 0, 0]], out: 8 }
    - { in: [[6, 9]], out: 21 }
    - { in: [[6, 9, 4, 2, 0]], out: 188 }
    - { in: [[-7, -6, -5, -4]], out: -94 }
    - { in: [[-1, -1, -1]], out: -7 }
  shouldn't do string multiplication with string lists:
    - { in: [["1", "0", ["0", "1"]]], out: 5 }

"C":
  When given lists:
    - { in: [3, [1, 3, 30, 2, 33, 4, 3, 3]], out: 3 }
    - { in: [[[1, 30, 2, 33, 4], 3]], out: 0 }
    - in:
        - [1, 30, [["h"], ["e"], ["c"]], 33, 4]
        - [["h"], ["e"], ["c"]]
      out: 1
  When given strings:
    - { in: ["lolollol lol asd", "lol"], out: 3 }
    - { in: ["lolollol lol asd", "asdf"], out: 0 }
  When given mixed types:
    - { in: [12, 1], out: 1 }
    - { in: ["ab1111ab", 1], out: 4 }
    - { in: [12341234, 2], out: 2 }
    - { in: [23432423, "3"], out: 3 }

"D":
  - { in: [1, 2, 3], stack: [3, 3, 3, 2, 1] }

"E":
  When given a number:
    - { in: [1], out: 2 }
    - { in: [2], out: 4 }
    - { in: [3], out: 8 }
    - { in: [4], out: 16 }
    - { in: [6.9], out: 119.4282229167113492456119380671925973794854 }
    - { in: [-234], out: 0 }
  When given a string:
    - { in: ["1"], out: 1 }
    - { in: ["2"], out: 2 }
    - { in: ["3243"], out: 3243 }
    - { in: ["-234"], out: -234 }
    - { in: ["0"], out: 0 }
    - { in: ["[1, 2, 3, 4, 5, 6]"], out: [1, 2, 3, 4, 5, 6] }
    - { in: ["[]"], out: [] }
    - { in: ['"lol"'], out: "lol" }

"F":
  - {in: [43, 5], out: 23}
  - {in: ["43", 5], out: 23}
  - {in: ["acv", 36], out: 13423}
  - {in: ["1b2", 12], out: 278}
  - {in: ["banana", "nab"], out: 577}
  - {in: [[15, 23, 9], 31], out: 15137}
  - in:
      - - !num 0ı2
        - 5
      - !num 25ı3
    out: !num 1_ı50

"G":
  - { in: [[1, 2, 3, 4, 5, 6, 7]], out: 7 }
  - { in: [[]], out: [] }
  - { in: [[6, 9]], out: 9 }
  - { in: [[9, 6]], out: 9 }
  - { in: [[1, 2, 3, 4, 5, 6, 7], 3], out: [3, 3, 3, 4, 5, 6, 7] }

"H":
  - { in: [69420], out: "10F2C" }
  - { in: [0], out: "0" }
  - { in: [89], out: "59" }
  - { in: ["10F2C"], out: 69420 }
  - { in: ["59"], out: 89 }

"I":
  - { in: [[1, 2, 3], [4, 5, 6]], out: [1, 4, 2, 5, 3, 6] }
  - { in: [[1, 2, 3], [4, 5, 6, 7]], out: [1, 4, 2, 5, 3, 6, 7] }
  - { in: [[1, 2, 3], [4, 5]], out: [1, 4, 2, 5, 3] }
  - { in: ["srn", "tig"], out: "string" }
  - { in: ["aaaa", ""], out: "aaaa" }
  - { in: ["aaa", [1]], out: ["a", 1, "a", "a"] }
  - { in: [123, 456], out: [1, 4, 2, 5, 3, 6] }

"J":
  - { in: [[1, 2, 3], 4], out: [1, 2, 3, 4] }
  - { in: ["abc", "def"], out: "abcdef" }
  - { in: [1, [2, 3, 4]], out: [1, 2, 3, 4] }
  - { in: [[1, 2], [3, 4]], out: [1, 2, 3, 4] }
  - { in: [123, 456], out: 123456 }
  - { in: [123, "4567"], out: "1234567" }
  - { in: ["123", 4568], out: "1234568" }

"K":
  - { in: [20], out: [1, 2, 4, 5, 10, 20] }
  - { in: [100], out: [1, 2, 4, 5, 10, 20, 25, 50, 100] }
  - { in: [1], out: [1] }
  - { in: [0], out: [] }
  - { in: [-1], out: [-1] }
  - { in: ["23423"], out: 1 }
  - { in: ["0"], out: 1 }
  - { in: ["ljlkerg23423"], out: 0 }

"L":
  - { in: [-234], out: 4 }
  - { in: [0], out: 1 }
  - { in: [1], out: 1 }
  - { in: [6782342], out: 7 }
  - { in: [123456789], out: 9 }
  - { in: ["w;ergn"], out: 6 }
  - { in: ["h"], out: 1 }
  - { in: [""], out: 0 }
  - { in: [[1, 2, 3, 4, 5, 6, 7]], out: 7 }
  - { in: [[]], out: 0 }

"M":
  When given two lists:
    - in: [[1, 2, [3, 4], 5], [1, 2, [[3, 4, 6], 5]]]
      out: [1, 2, [[[3, 4], 5, 1], 2]]
    - in: [[1, 2, 3, 4, 5, 6, 7], [[8, 9], 10, 11, 12, [13, 14]]]
      out: [[1, 2], 3, 4, 5, [6, 7]]
    - { in: [[1, 2, 3], [[4], [], [6]]], out: [[1], [], [2]] }
    - { in: [[1, 2, 3], [4, 5, 6, 7, 8, 9, 10]], out: [1, 2, 3, 1, 2, 3, 1] }
  When given two numbers:
    - { in: [45, 3], out: 2 }
    - { in: [1.125, 2], out: 0 }
    - { in: [1.125, 3], out: 0 }
    - { in: [0, 2], out: 0 }
    - { in: [-3, 1], out: 3 }
  When given two strings:
    - {in: ["345 + 123", "\d"], out: "3"}
    - {in: ["345 + 123", "\d+"], out: "345"}
    - {in: ["345 + 123", "\d+ *."], out: "345 +"}
    - {in: ["345     + 123", "\d+ *."], out: "345     +"}

"N":
  When given a number:
    - { in: [420], out: -420 }
    - { in: [0], out: 0 }
    - { in: [-69], out: 69 }
  When given a string:
    - { in: ["a"], out: "A" }
    - { in: ["A"], out: "a" }
    - { in: ["abc"], out: "ABC" }
    - { in: ["ABC"], out: "abc" }
    - { in: ["123"], out: "123" }
    - { in: ["abC123"], out: "ABc123" }

"O":
  When given a number:
    - { in: [65], out: "A" }
    - { in: [97], out: "a" }
    - { in: [8482], out: "™" }
    - { in: [[97, 98, 99]], out: "abc" }
    - { in: [[49, 50, 51]], out: "123" }
  When given a string:
    - { in: ["A"], out: 65 }
    - { in: ["a"], out: 97 }
    - { in: ["™"], out: 8482 }
    - { in: ["abc"], out: [97, 98, 99] }
    - { in: ["123"], out: [49, 50, 51] }

"P":
  When given a number:
    - { in: [4824], out: [4, 48, 482, 4824] }
    - { in: [-342], out: [3, 34, 342] }
  When given a string:
    - { in: ["Hello"], out: ["H", "He", "Hel", "Hell", "Hello"] }
    - { in: ["abc"], out: ["a", "ab", "abc"] }
    - { in: ["123"], out: ["1", "12", "123"] }
    - { in: [""], out: [] }
  When given a list:
    - { in: [[1, 2, 3]], out: [[1], [1, 2], [1, 2, 3]] }
    - {
        in: [[1, 2, 3, 4, 5]],
        out: [[1], [1, 2], [1, 2, 3], [1, 2, 3, 4], [1, 2, 3, 4, 5]],
      }
    - { in: [[1]], out: [[1]] }

"Q":
  - {in: [[1,2,3,4,5], 2], out: [1,2,4,5]}
  - {in: ["abcdef", 3], out: "abcef"}
  - {in: [[1,2,3,4,5], 0], out: [2,3,4,5]}
  - {in: [[1,2,3,4,5], -1], out: [1,2,3,4]}
  - {in: ["username@domain.com", "([a-z]+)@([a-z]+)\.co(m)"], out: ["username", "domain", "m"]}

"R":
  When given two numbers:
    - { in: [1, 5], out: [1, 2, 3, 4] }
    - { in: [5, 1], out: [5, 4, 3, 2] }
    - { in: [1, 1], out: [] }
    - { in: [1, 0], out: [1] }
    - { in: [0, 1], out: [0] }
    - { in: [-5, 5], out: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4] }
  When given two strings:
    - { in: ["56.234", "\d+\.\d+"], out: 1 }
    - { in: ["Hello, World", ".+"], out: 1 }
    - { in: ["Hello, World", "Hello, world"], out: 0 }
    - { in: ["https://www.google.com", "https?://.+"], out: 1 }
  When given two lists:
    - {in: [[1,2],[2,3,4]], out: [1,2,3,4]}
    - {in: [[1,2,3,1,2,3,1,2,3],[5,4,3,2,5,4,3,2]], out: [1,2,3,1,2,3,1,2,3,5,4,5,4]}

"S":
  - { in: ["qzqadbA;z"], out: ";Aabdqqzz" }
  - { in: [891738], out: [1, 3, 7, 8, 8, 9] }
  - {
      in: [[8, 9, "acb", "abc", 1, 9, 2, [1, 2]]],
      out: [1, 2, 8, 9, 9, [1, 2], "abc", "acb"],
    }
  - { in: [[[1, 2, 4], [1, 2, 3]]], out: [[1, 2, 3], [1, 2, 4]] }
  - { in: [[[1, 2, 3], [1, 2]]], out: [[1, 2], [1, 2, 3]] }

"T":
  When given a number:
    - { in: [5], out: 15 }
    - { in: [0], out: 0 }
    - { in: [-5], out: -15 }
  When given a string:
    - { in: ["hello"], out: 1 }
    - { in: [""], out: 1 }
    - { in: ["Hello, World!"], out: 0 }
  When given a list:
    - { in: [[[1, 2, 3], [4, 5, 6]]], out: [[1, 4], [2, 5], [3, 6]] }
    - in: [[[1, 2, 3], [4, 5, 6], [7, 8, 9]]]
      out: [[1, 4, 7], [2, 5, 8], [3, 6, 9]]

"U":
  - { in: [[1, 2, 3, 4, 5]], stack: [[2, 4], [1, 3, 5]]}
  - { in: [[1, 2, 3, 4, 5, 6]], stack: [[2, 4, 6], [1, 3, 5]]}
  - { in: ["abcdef"], stack: ["bdf", "ace"]}
  - { in: [""], stack: ["", ""]}
  - { in: [[]], stack: [[], []]}
  - { in: [[1]], stack: [[], [1]]}
  - { in: [[1, 2]], stack: [[2], [1]]}
  - { in: [34203], stack: [40, 323]}

"V":
  When given a list:
    - { in: [[[1, 2, 3], [4, 5, 6]]], out: [[3, 2, 1], [6, 5, 4]]}
    - { in: [[[1, 2, 3], [4, 5, 6], [7, 8, 9]]], out: [[3, 2, 1], [6, 5, 4], [9, 8, 7]]}
    - { in: [[[1, 2, 3, 4, 5]]], out: [[5, 4, 3, 2, 1]]}
    - { in: [[]], out: []}
    - { in: [[1]], out: [1]}
    - { in: [[[], []]], out: [[], []]}
    - { in: [[1, 2]], out: [1, 2]}
  When given a string:
    - { in: ["hello world"], out: "Hello World"}
    - { in: ["vyxal Golfing"], out: "Vyxal Golfing"}
    - { in: ["VYXAL GOLFING"], out: "Vyxal Golfing"}
    - { in: ["h#*j"], out: "H#*J"}
    - { in: ["sk(*@lkbjthIU@#YN$UHl)"], out: "Sk(*@Lkbjthiu@#Yn$Uhl)"}
    - { in: ["Hello, World!"], out: "Hello, World!"}
    - { in: ["this i!!!!s A TESt!!!!   sentENCE"], out: "This I!!!!S A Test!!!!   Sentence"}
  When given a number:
    - { in: [123], out: -122}
    - { in: [0], out: 1}
    - { in: [-123], out: 124}

"W":
  - { in: [1, 2, 3, 4, 5], stack: [[], 5, 4, 3, 2] }
  - { in: [1, 2, 3, 4, 5, 6], stack: [[], 6, 5, 4, 3, 2] }

"Y":
  - { in: [5, 4], out: [5, 5, 5, 5]}
  - { in: [5, 0], out: []}
  - { in: [5, 1], out: [5]}
  - { in: ["abc", 3], out: ["abc", "abc", "abc"]}
  - { in: ["abc", 0], out: []}
  - { in: ["abc", 1], out: ["abc"]}
  - { in: [[1, 2, 3], 3], out: [[1, 2, 3], [1, 2, 3], [1, 2, 3]]}
  - { in: [[1, 2, 3], 0], out: []}
  - { in: [[1, 2, 3], 1], out: [[1, 2, 3]]}
  - { in: [4, 5], out: [4, 4, 4, 4, 4]}
  - { in: [4, 0], out: []}
  - { in: [3, "abc"], out: ["abc", "abc", "abc"]}
  - { in: [3, ""], out: ["", "", ""]}
  - { in: [3, [1, 2, 3]], out: [[1, 2, 3], [1, 2, 3], [1, 2, 3]]}
  - { in: [3, 1], out: [3]}
  - { in: ["abc", [1, 2, 3]], out: "abbccc"}
  - { in: ["abc", [0, 1, 0]], out: "b"}
  - { in: ["abc", [1, 0, 1]], out: "ac"}
  - { in: ["abc", [0, 0, 0]], out: ""}
  - { in: ["abc", [1, 1, 1]], out: "abc"}
  - { in: [[1, 2, 3], [1, 2, 3]], out: [[1], [2, 2], [3, 3, 3]]}
  - { in: [[1, 2, 3], [0, 0, 0]], out: [[], [], []]}

"Z":
  - { in: [[1, 2, 3], [4, 5, 6]], out: [[1, 4], [2, 5], [3, 6]]}
  - { in: [[1, 2, 3], [4, 5]], out: [[1, 4], [2, 5], [3, 0]]}
  - { in: [[1, 2], [3, 4, 5]], out: [[1, 3], [2, 4], [0, 5]]}
  - { in: [[], []], out: []}

"_":
  - { in: [1, 2, 3], stack: [2, 1] }
  - { in: [1, 2, 3, 4, 5], stack: [4, 3, 2, 1] }
  - { in: [1], stack: [] }

":":
  # todo(lyxal): make flag to give default value when popping off empty stack
  #              without having to set online = true
  # - { in: [], stack: [0] }
  - { in: [1], stack: [1, 1] }
  - { in: [1, [2, 3]], stack: [[2, 3], [2, 3], 1] }
  - { in: [1, 2, 3, 4, 5], stack: [5, 5, 4, 3, 2, 1] }

"!":
  - { in: [0], out: 1 }
  - { in: [10], out: 3628800 }
  - { in: [-5], out: 120 }
  - { in: [5.1], out: 142.4519440656788 }
  - { in: [1.654], out: 1.4898045048177275 }

"$":
  - { in: [1, 2, 3, 4, 5], stack: [4, 5] }
  - { in: [4], stack: [4, 4] }

"%":
  when given two numbers:
    - { in: [5, 2], out: 1 }
    - { in: [5, 3], out: 2 }
    - { in: [0, 1], out: 0 }
    - { in: [1, 0], out: 0 }
    - { in: [6.9, 4.2], out: 2.7 }
    - { in: [420, -69], out: -63 }
    - { in: [420, -69.69], out: -67.83 }
    - in:
      - !num 3ı4
      - !num 1ı1
      out: !num 0ı1
  when given a string and any value:
    - { in: ["Hello, %", "World"], out: "Hello, World" }
    - { in: ["Hello, %", 69], out: "Hello, 69" }
    - { in: ["Hello, %", [[1, 2, 3]]], out: "Hello, [ 1 | 2 | 3 ]" }
    - { in: ["Hello, %", 69.69], out: "Hello, 69.69" }
    - { in: ["% + % = %", [1, 2, 3]], out: "1 + 2 = 3" }


"'":
  - {in: [[[1,1,1],[0,0,0],[1,1,1]]], out: "1 1 1\n0 0 0\n1 1 1"}

"&":
  - { in: [[1, 2, 3], [4, 5]], out: [1, 2, 3, [4, 5]] }
  - { in: [[1, 2, 3], 69], out: [1, 2, 3, 69] }
  - { in: ["abc", []], out: ["a", "b", "c", []] }

"a":
  when given a list:
    - { in: [[1, 391, "dqw4w9wgxcq", [0]]], out: 1 }
    - { in: [[0, 69420, []]], out: 1 }
  when given a single-character string:
    - { in: ["a"], out: 0 }
    - { in: ["E"], out: 1 }
    - { in: ["y"], out: 0 }
  when given a multi-character string:
    - { in: ["asdEy"], out: [0, 0, 0, 1, 0] }

"b":
  When given a number:
    - { in: [5], out: [1, 0, 1] }
    - { in: [0], out: [0] }
    - { in: [-10], out: [-1, 0, -1, 0] }
    - { in: [22122550664723003622970748254752], out: [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]}
  When given a string:
    - {
        in: ["VTI"],
        out:
          [[1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1]],
      }
    - { in: [" "], out: [[1, 0, 0, 0, 0, 0]] }
  When given a list:
    - { in: [[2, 3]], out: [[1, 0], [1, 1]] }

"c":
  When given a list and a scalar:
    - { in: [[1, 2, 3, 4], 4], out: 1}
    - { in: [[1, 2, 3, 4], 5], out: 0}
    - { in: [[], 1], out: 0}
    - { in: [["1", "2", 3], 3], out: 1}
    - { in: [["1", "2", 3], 2], out: 0}
    - { in: [["1", "2", 3], "2"], out: 1}
  When given a scalar and a list:
    - { in: [4, [1, 2, 3, 4]], out: 1}
    - { in: [5, [1, 2, 3, 4]], out: 0}
    - { in: [1, []], out: 0}
    - { in: [3, ["1", "2", 3]], out: 1}
    - { in: [2, ["1", "2", 3]], out: 0}
    - { in: ["2", ["1", "2", 3]], out: 1}
  When given two scalars:
    - { in: ["abcdef", "f"], out: 1}
    - { in: ["abcdef", "g"], out: 0}
    - { in: ["abcdef", "abc"], out: 1}
    - { in: ["abcdef", "abce"], out: 0}
    - { in: ["abcdef", ""], out: 1}
    - { in: ["abcdef", "abcdefg"], out: 0}
    - { in: [234923, 4], out: 1}
    - { in: [234923, 5], out: 0}
    - { in: [234923, 234], out: 1}
    - { in: [234923, 2341], out: 0}

"d":
  - { in: [4], out: 8}
  - { in: [0], out: 0}
  - { in: [-1], out: -2}
  - { in: [1.5], out: 3}
  - { in: ["abc"], out: "abcabc"}
  - { in: [" "], out: "  "}
  - { in: ["\n"], out: "\n\n"}
  - { in: [""], out: ""}

"e":
  - { in: [[1, 2, 45, 124, -765, -4]], out: [0, 1, 0, 1, 0, 1] }
  - { in: [[1.4, 2.5]], out: [0, 0] }
  - in:
    - "hello\nworld"
    out: ["hello", "world"]

"f":
  - {in: [[[1, 2, 2], 7, [8, [9]]]], out: [1, 2, 2, 7, 8, 9]}
  - {in: [[]], out: []}
  - {in: [[[], [], []]], out: []}
  - {in: [3436897], out: [3, 4, 3, 6, 8, 9, 7]}
  - {in: ["gaming"], out: ["g", "a", "m", "i", "n", "g"]}

"g":
  - { in: [[1, 2, 3, 4, 5, 6, 7]], out: 1 }
  - { in: [[]], out: [] }
  - { in: [[6, 9]], out: 6 }
  - { in: [[9, 6]], out: 6 }
  - { in: [[1, 2, 3, 4, 5, 6, 7], 3], out: [1, 2, 3, 3, 3, 3, 3] }

"h":
  - { in: [[1, 2, 3, 4, 5]], out: 1}
  - { in: [[]], out: 0}
  - { in: ["abc"], out: "a"}
  - { in: [" "], out: " "}
  - { in: [""], out: ""}

"i":
  - { in: ["abc", [1, 2]], out: "bc"}
  - { in: ["abc", 3], out: "a"}
  - { in: [[1, 2, 3], [4, 9]], out: [2, 1]}
  - { in: ["joemama", "biden's"], out: "joebiden'smama"}
  - { in: [[1, 2, 3], 0], out: 1}
  - { in: [[1, 2, 3], -1], out: 3}
  - { in: [[1, 2, 3], -0.1], out: 1}
  - { in: [[1, 2, 3], 1.9], out: 2}
  - { in: [[2, 3, 4, 5], [2]], out: [4]}
  - { in: [[1, 3, 5, 7], [1, 3]], out: [3, 7]}
  - { in: [4, [1, 3, 4]], out: 3}
  - { in: ["abc", [1, 2, "foo"]], out: ["b", "c", "afoobc"]}
  - { in: ["abc", ["foo", "bar", "baz"]], out: ["afoobc", "abarbc", "abazbc"]}

"j":
  - { in: [[1, 2, 3], "penguin"], out: "1penguin2penguin3"}
  - { in: [123, "penguin"], out: "1penguin2penguin3"}
  - { in: [123, 4], out: "14243"}
  - { in: [["he", "", "o, wor", "d!"], "l"], out: "hello, world!"}
  - { in: [[], "a"], out: ""}
  - { in: [[5, 6, 7, 8], [1, 2, 3]], out: [5, 1, 2, 3, 6, 1, 2, 3, 7, 1, 2, 3, 8]}
  - { in: [[[4, 5], [6, 7]], [1, 2, 3]], out: [4, 5, 1, 2, 3, 6, 7]}
  - { in: [[[4, 5], [6, 7]], 8], out: [4, 5, 8, 6, 7]}
  - { in: [[4, 5, 6, 7], 8], out: [4, 8, 5, 8, 6, 8, 7]}

"l":
  - {in: [["abc", 1234, [], [1, 2, [3]]]], out: [3, 4, 0, 3]}

"o":
  - {in: [[1, 2, 3, 4, 5, 6, 7], 2], out: [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]]}
  - {in: [[1, 2, 3, 4, 5, 6, 7], 3], out: [[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7]]}
  - {in: [[1, 2, 3, 4, 5, 6, 7], 1], out: [[1], [2], [3], [4], [5], [6], [7]]}
  - {in: [[1, 2, 3, 4, 5, 6, 7], -2], out: [[6, 7], [5, 6], [4, 5], [3, 4], [2, 3], [1, 2]]}
  - {in: ["abcdef", 2], out: ["ab", "bc", "cd", "de", "ef"]}
  - {in: ["abcdef", 3], out: ["abc", "bcd", "cde", "def"]}
  - {in: ["abcdef", 1], out: ["a", "b", "c", "d", "e", "f"]}
  - {in: ["abcdef", -2], out: ["ef", "de", "cd", "bc", "ab"]}
  - {in: [[1, 2, 3, 4, 5, 6, 7]], out: [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]]}
  - {in: ["abcdef"], out: ["ab", "bc", "cd", "de", "ef"]}
  - {in: [4, "abcdef"], out: ["ab", "bc", "cd", "de", "ef"]}
  - {in: [[1, 2, 3, 4, 5, 6, 7], 0], out: []}
  - {in: [[], 4], out: []}

"p":
  - {in: [[1, 2, 3, 4], 5], out: [5, 1, 2, 3, 4]}
  - {in: [[1, 2, 3, 4], []], out: [[], 1, 2, 3, 4]}
  - {in: ["abc", "def"], out: "defabc"}
  - {in: ["abc", 123], out: "123abc"}
  - {in: [45, 34], out: 3445}

"r":
  - {in: ["abc abc", "a", "A"], out: "Abc Abc"}
  - {in: ["abc abc", "ab", "AB"], out: "ABc ABc"}
  - {in: ["abc abc", "abc", "ABC"], out: "ABC ABC"}
  - {in: ["abc abc", "d", "D"], out: "abc abc"}
  - {in: ["abc abc", "abc abc", "ABC ABC"], out: "ABC ABC"}
  - {in: ["abc", "", "H"], out: "HaHbHcH"}
  - {in: [[1, 2, 3, 4, 5], 5, 6], out: [1, 2, 3, 4, 6]}
  - {in: [[1, 1, 1, 1, 1], 1, 2], out: [2, 2, 2, 2, 2]}
  - {in: [[1, "1", 1, "1"], 1, 2], out: [2, "1", 2, "1"]}
  - {in: [[1, "1", 1, "1"], "1", 2], out: [1, 2, 1, 2]}
  - {in: [[[1, 2, 3], [1, 2, 3], [4, 5, 6]], [1, 2, 3], 5], out: [5, 5, [4, 5, 6]]}

"s":
  - {in: ["Hello World", " "], out: ["Hello", "World"]}
  - {in: [[1, 2, 3, 4, 2, 5, 6, 2, 1], 2], out: [[1], [3, 4], [5, 6], [1]]}
  - {in: ["hello", ""], out: ["h", "e", "l", "l", "o"]}

"t":
  - { in: [[1, 2, 3, 4, 5]], out: 5}
  - { in: [[]], out: 0}
  - { in: ["abc"], out: "c"}
  - { in: [" "], out: " "}
  - { in: [""], out: ""}

"u":
  - { in: [[1, 3, 5, 5]], out: [1, 3, 5]}
  - { in: ["abdbcdbch"], out: "abdch"}
  - { in: [[]], out: []}
  - { in: [["1", 1]], out: ["1", 1]}
  - { in: [1213121], out: 123}
  - { in: [[[1], [1], "1", 1]], out: [[1], "1", 1]}

"v":
  - {in: [123], out: 122}
  - {in: [-1], out: -2}

"w":
  - { in: [4], out: [4]}
  - { in: [0], out: [0]}

"y":
  - {in: [1234567, "abc"], out: "cacccabbbbcab"}
  - {in: [1234567, 5], out: [3, 0, 4, 0, 0, 1, 2, 3, 2]}
  - {in: [8163, -10], out: [1, 2, 2, 4, 3]}
  - {in: [928343, ["he", "ll", "o"]], out: ["ll", "o", "he", "o", "he", "ll", "ll", "ll", "ll", "he", "he", "he", "o"]}
  - {in: [[10, 12, 6, 2, 8, 145], 2], out: [[1, 0, 1, 0], [1, 1, 0, 0], [1, 1, 0], [1, 0], [1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1]]}
  - {in: [0, 0], out: [0]}
  - {in: [0, 1], out: [0]}
  - {in: [0, []], out: 0}
  - {in: [0, ["a"]], out: ["a"]}
  - {in: [3, -2], out: [1, 1, 1]}
  - in:
      - !num 3ı-5
      - !num 4ı0
    out:
      - !num 3ı-5
  - in:
      - !num 3ı-3
      - !num -1ı-1
    out: # todo(user): make a less verbose way to write this
      - !num 0ı1
      - !num 1ı0
      - !num 0ı1
      - !num 1ı0
      - !num 0ı1
      - !num 1ı0
  - {in: ["123 + 456", "\d+"], out: ["123", "456"] }
  - {in: ["123 + 456", "\d"], out: ["1", "2", "3", "4", "5", "6"] }
  - {in: ["username@domain.com", "[^@]+"], out: ["username", "domain.com"] }

"z":
  - {in: [4], out: [0, 1, 2, 3, 4]}
  - {in: [0], out: [0]}
  - {in: [1], out: [0, 1]}
  - {in: [[3, 2]], out: [[[0, 0], [0, 1], [0, 2]], [[1, 0], [1, 1], [1, 2]], [[2, 0], [2, 1], [2, 2]], [[3, 0], [3, 1], [3, 2]]]}
  - {in: ["h"], out: 1}
  - {in: ["H"], out: 0}
  - {in: ["hello world"], out: [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]}
  - {in: [["Foo", 3, [2, 2]]], out: [[0, 1, 1], [0, 1, 2, 3], [[[0, 0], [0, 1], [0, 2]], [[1, 0], [1, 1], [1, 2]], [[2, 0], [2, 1], [2, 2]]]]}
  - in:
    - !num 0ı5
    out:
    - !num 0ı0
    - !num 0ı1
    - !num 0ı2
    - !num 0ı3
    - !num 0ı4
    - !num 0ı5

"Ȧ":
  - {in: [-234], out: 234}
  - {in: [0], out: 0}
  - {in: [234], out: 234}
  - {in: ["Hello, World!"], out: "HelloWorld"}
  - {in: ["!!!!!"], out: ""}
  - {in: [" "], out: ""}

"Ḃ":
  - {in: [[1, 2, 3, 4]], out: [0, 1, 1, 1, 1]}
  - {in: [[1, 2, 3, 4, 5]], out: [0, 1, 1, 1, 1, 1]}
  - {in: [[]], out: []}
  - {in: [[1]], out: [0, 1]}
  - {in: [5], out: 0}
  - {in: [0], out: 0}
  - {in: [1], out: 1}

"Ċ":
  - {in: [[1,2,3,4], [1,4]], out: [2, 3]}
  - {in: [[1,2,3,4], [1,2,3,4]], out: []}
  - {in: [[1,2], [1,2,3,4]], out: [3, 4]}
  - {in: [[1,2,3,4,5,4,3,2,1], [1,2,9,9]], out: [3,4,5,4,3,9,9]}

"ÞĊ":
  - {in: [1], out: 1}
  - {in: [0], out: 0}
  - {in: [5], out: 1}
  - {in: [10], out: 1}
  - {in: [-11], out: 0}

"Ḋ":
  - {in: [12, 6], out: 1}
  - {in: [5, 7], out: 0}
  - {in: [0, 0], out: 1}
  - {in: [0, 1], out: 1}
  - {in: ["Vyxal", 5], out: "Vyxal     "}
  - {in: ["Vyxal", 0], out: "Vyxal"}
  - {in: [5, "Vyxal"], out: "Vyxal     "}
  - {in: ["bkflweioauamrw", "[aeiou]+"], out: [5, 11]}
  - {in: ["bkflweioauamrw", "1+"], out: []}

"Ė":
  When given a number:
    - { in: [0], out: 1 }
    - { in: [1], out: 10 }
    - { in: [2], out: 100 }
    - { in: [-3], out: 0.001 }

"Ḟ":
  when used as indexOf:
    - { in: [["1"], 1], out: -1 }
    - { in: [[1, 2, 3, 2], 2], out: 1 }
    - { in: [["32", 2, "3"], "3"], out: 2 }
  when given a function:
    - in:
        - [1, 0, 2, 3, 6]
        - !vany "λe}" # Find even numbers
      out: [1, 2, 4]

"Ġ":
  - in:
      - !vany "λe}"
      - [-1, 3, 2, "foo", [6, 9], 0, 4]
    contains: [[[6, 9]], ["foo"], [-1, 3], [2, 0, 4]]
  - {in: [[1,3,2]], out: 1}
  - {in: [[60,42,108]], out: 6}
  - {in: [50,35], out: 5}
  - {in: [0,0], out: 0}
  - {in: [-12,-20], out: 4}
  - {in: ["123456789123", "\d\d\d"], out: ["123", "234", "345", "456", "567", "678", "789", "891", "912", "123"], jvm-only: true}

"Ḣ":
  - { in: [["foo", 2]], out: [2] }
  - { in: ["bar"], out: "ar" }
  - { in: [[]], out: [] }
  - { in: [""], out: "" }

"İ":
  Making complex numbers:
    - in:
        - !num 2ı5
        - !num 4ı9
      out: !num 2ı4
  Dropping:
    - { in: [[1,2,3,4,5], 2], out: [3,4,5]}
    - {in: ["Hello, World!", 5], out: ", World!"}
    - {in: ["Hello, World!", 0], out: "Hello, World!"}
    - {in: [[[1,2,3],[4,5,6],[7,8,9],[10,11,12]], [2, 1]], out: [[8, 9], [11, 12]]}

  Collect while unique:
    - in:
        - [1, 2, 3, 4]
        - !vany "λḢ}"
      out: [[2, 3, 4], [3, 4], [4], []]

"Θ":
  - {in: [[1, 2, 3, 4, 5], 3], out: [1, 2, 3]}
  - {in: [[1, 2, 3, 4, 5], -2], out: [4, 5]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9],[10,11,12]], [3, 2]], out: [[1, 2], [4, 5], [7, 8]]}

"Ŀ":
  Numbers:
    - {in: [8, 2], out: 3}
    - {in: [1000, 10], out: 3}
  Numbers and strings:
    - {in: ["abcde", 5], out: 1}
    - {in: ["abcde", 10], out: 0}
  Strings:
    - {in: ["abcde", "fghij"], out: 1}
    - {in: ["abcde", "abcdef"], out: 0}

"Ṁ":
  Matrices:
    - {in: [[[1,2],[3,4]],[[5,6],[7,8]]], out: [[19, 22], [43, 50]]}
  Nth-items:
    - { in: [[1, 2, 3, 4, 5, 6, 7], 3.6], out: [1, 4, 7] }
    - { in: ["Hello World!", -2], out: "HloWrd" }
    - { in: [[3, 2, 1], 0], out: [3, 2, 1, 1, 2, 3] }

"Ṅ":
  Prime checking:
    - {in: [[1, 2, 3, 4, 5, 39, 174, 4382, 17171, 8135191]], out: [0, 1, 1, 0, 1, 0, 0, 0, 0, 1]}
  Quine cheese:
   - {in: ["Hello, World!"], out: "\"Hello, World!\"Hello, World!"}
   - {in: ["Ṅ"], out: "\"Ṅ\"Ṅ"} # quine :p

"Ȯ":
  - {in: [1,2], out: 1}

"Ṗ":
  - {in: [1234], out: [1234,1243,1324,1342,1423,1432,2134,2143,2314,2341,2413,2431,3124,3142,3214,3241,3412,3421,4123,4132,4213,4231,4312,4321]}
  - {in: ["abc"], out: ["abc","acb","bac","bca","cab","cba"]}
  - {in: [[1, 2, 3, 4]], out: [[1, 2, 3, 4], [1, 2, 4, 3], [1, 3, 2, 4], [1, 3, 4, 2], [1, 4, 2, 3], [1, 4, 3, 2], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1, 4], [2, 3, 4, 1], [2, 4, 1, 3], [2, 4, 3, 1], [3, 1, 2, 4], [3, 1, 4, 2], [3, 2, 1, 4], [3, 2, 4, 1], [3, 4, 1, 2], [3, 4, 2, 1], [4, 1, 2, 3], [4, 1, 3, 2], [4, 2, 1, 3], [4, 2, 3, 1], [4, 3, 1, 2], [4, 3, 2, 1]]}

"Ṙ":
  - {in: ["abc"], out: "bca"}
  - {in: [203], out: 32}
  - {in: [23049], out: 30492}
  - {in: [[1, 2, 3, 4]], out: [2, 3, 4, 1]}
  - {in: [""], out: ""}
  - {in: [[]], out: []}

"Ṡ":
  - {in: [[[1,2,3], [4,5,6], ["lots", "of", "soda"]]], out: [6, 15, "lotsofsoda"]}
  - {in: [[[1,2,3,4,5,6,7,8,9,10]]], out: [55]}
  - {in: [[1,2,3,4,5,6,7,8,9,10], 2], out: [0, 1, 1, 2, 2, 3, 3, 4, 4, 5]}
  - {in: [45, 6], out: 7}
  - {in: [2, [[1,2,3,4,5,6,7,8,9,10]]], out: [55]}

"Ṫ":
  - { in: [[1, 2, 3, 4]], out: [1, 2, 3] }
  - { in: ["asdf"], out: "asd" }
  - { in: [[]], out: [] }
  - { in: [""], out: "" }

"Ẇ":
  - {in: [[1,2,3,4,5,6,7,8,9,10], 3], out: [[1,2,3],[4,5,6],[7,8,9],[10]]}
  - {in: [[1,2,3,4,5,6,7,8,9,10], 4], out: [[1,2,3,4],[5,6,7,8],[9,10]]}
  - {in: [[1,2,3,4,5,6,7,8,9,10], 10], out: [[1,2,3,4,5,6,7,8,9,10]]}
  - {in: [[1,2,3,4,5,6,7,8,9,10], 11], out: [[1,2,3,4,5,6,7,8,9,10]]}
  - {in: [[1,2,3,4,5,6,7,8,9,10], 0], out: []}
  - {in: ["abcdefghij", 3], out: ["abc","def","ghi","j"]}
  - {in: ["abcdefghij", 4], out: ["abcd","efgh","ij"]}
  - {in: ["abcdefghij", 10], out: ["abcdefghij"]}
  - {in: ["abcdefghij", 11], out: ["abcdefghij"]}
  - {in: ["abcdefghij", 0], out: []}
  - {in: [[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4], [5, 3, 1, 0, 4]], out: [[1, 2, 3, 4, 5], [6, 7, 8], [9], [], [1, 2, 3, 4]]}

"Ẋ":
  - {in: [[1,2],[3,4]], out: [[1, 3], [1, 4], [2, 3], [2, 4]]}
  - {in: [[1,2,3], [4,5,6,7]], out: [[1, 4], [1, 5], [1, 6], [1, 7], [2, 4], [2, 5], [2, 6], [2, 7], [3, 4], [3, 5], [3, 6], [3, 7]]}
  - {in: [4,4], out: [[1, 1], [1, 2], [1, 3], [1, 4], [2, 1], [2, 2], [2, 3], [2, 4], [3, 1], [3, 2], [3, 3], [3, 4], [4, 1], [4, 2], [4, 3], [4, 4]]}

"ι":
  - {in: ["abcdede"], out: [0, 1, 2, 3, 4, 5, 6]}
  - {in: ["abcde"], out: [0, 1, 2, 3, 4]}
  - {in: ["a"], out: [0]}
  - {in: [[1,2,3,4,1,2,3,4]], out: [0,1,2,3,4,5,6,7]}

"κ":
  - {in: ["abcdede"], out: [1,2,3,4,5,6,7]}
  - {in: ["abcde"], out: [1,2,3,4,5]}
  - {in: ["a"], out: [1]}
  - {in: [[1,2,3,4,1,2,3,4]], out: [1,2,3,4,5,6,7,8]}

"ȧ":
  - {in: [49, 19], out: 30}
  - {in: [19, 49], out: 30}
  - {in: [[1, 2, 3, 4, 5], 20], out: [19, 18, 17, 16, 15]}
  - {in: [20, [1, 2, 3, 4, 5]], out: [19, 18, 17, 16, 15]}
  - {in: [[1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12]], out: [6, 6, 6, 6, 6, 6]}

"ḃ":
  - {in: [[10, 2]], out: [0, 0]}
  - {in: [[1, 2, 3, 4, 5]], out: [1, 0, 1, 0, 1]}
  - {in: ["abcdef"], out: "def"}

"ċ":
  - {in: [5, 3], out: 10}
  - {in: [3, 5], out: 0}
  - {in: [2, 1.5], out: 1.697652726}
  - {in: [-2, 5], out: -6}
  - {in: [[1, 2, 3, 4, 5], 3], out: [0, 0, 1, 4, 10]}
  - {in: ["abc", "cba"], out: 1}
  - {in: ["abbcbcbcbcabcbacbacbabcabcabcabcbacb", "abc"], out: 1}
  - {in: ["SUSSY", "sussy"], out: 0}

"Þċ":
  - {in: [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10]], out: []}
  - {in: [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10,11]], out: [11]}
  - {in: [[1,1,2,2,2,3,3,3],[1,2,2,3]], out: [1, 2, 3, 3]}
  - {in: [[1,1,2,2,2,3,3,3],[1,2,2,3,4]], out: [1, 2, 3, 3, 4]}
  - {in: [[], []], out: []}
  - {in: [[1, 2, 3], []], out: [1, 2, 3]}
  - {in: [12,234], out: [1,3,4]}
  - {in: [12,"12"], out: [1, 2, "1", "2"]}
  - {in: ["12",12], out: ["1","2",1,2]}

"ḋ":
  - {in: [[1,2,3], [4,5,6]], out: 32}
  - {in: [[1,2], [4,5,6]], out: 14}
  - {in: [[1,"sussy"], [4,5,6]], out: "4sussysussysussysussysussy0"}
  - {in: [10, 5], out: [1, 5]}
  - {in: [120, 43], out: [2, 34]}

"ė":
  - {in: [[1, 2, 4, 5, 8, 10]], out: [1, 0.5, 0.25, 0.2, 0.125, 0.1]}
  - {in: [["would you", "like some", "SUSSY     AMONGUS"]], out: ["wouldyou", "likesome", "SUSSYAMONGUS"]}


"ḟ":
  - {in: [[3831, 4949, "Am!!ong!::u5", "", 21930]], out: [[3, 1277], [7, 7, 101], "!!!::5", "", [2, 3, 5, 17, 43]]}

"ġ":
  basic functionality:
  - { in: [[1, "1", 2, 2, 2, 3]], out: [[1], ["1"], [2, 2, 2], [3]] }
  on empty lists:
    - { in: [[]], out: [] }
  on strings:
    - { in: ["fooo!!"], out: ["f", "ooo", "!!"] }
  on empty strings:
    - { in: [""], out: [] }

"ḣ":
  - { in: [[1, 2, 3]], stack: [[2, 3], 1] }
  - { in: ["asdf"], stack: ["sdf", "a"] }
  - { in: [[]], stack: [[], 0] }
  - { in: [""], stack: ["", ""] }

"ŀ":
  as transliterate:
    - {in: [1300655506, 356, 879], out: 1800977709}
    - {in: ["abcdefcba","abc","123"], out: "123def321"}
    - {in: [[1,2,0], [2], [5]], out: [1,5,0]}
    - {in: ["120", [2], "5"], out: "150"}
    - {in: [-120, [2], [5]], out: -150}
    - {in: ["abc","ab",["bb","cc"]], out: "bbccc"}
    - {in: ["abcd", ["ab", "cd"], ["cd", "ab"]], out: "cdab"}
    - {in: [431, 1234, 4321], out: 124}
    - {in: [-234, 1234, 4321], out: -321}
    - {in: ["Hello", "eHlo", "abcd"], out: "baccd" }
  as call while:
    - in:
        - 0
        - !vany "λ5<}" # Less than 5
        - !vany "λ1+}" # Increment
      out: 5


"ṁ":
  - { in: [123], out:  444}
  - { in: ["hi"], out: "hiih"}
  - { in: [[1,2,3]], out: [1,2,3,3,2,1]}

"ṅ":
  - {in: [[1,2,3]], out: [1,2,3,2,1]}
  - {in: [[1,2,3,4]], out: [1,2,3,4,3,2,1]}
  - {in: [[1,2,3,4,5]], out: [1,2,3,4,5,4,3,2,1]}
  - {in: [[1,2,3,4,5,6]], out: [1,2,3,4,5,6,5,4,3,2,1]}
  - {in: ["hello"], out: "hellolleh"}
  - {in: ["hello world"], out: "hello worldlrow olleh"}
  - {in: [4839], out: 4839384}


"Þṅ":
  - {in: [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10]], out: []}
  - {in: [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10,11]], out: []}
  - {in: [[1,1,2,2,2,3,3,3],[1,2,2,3]], out: [1, 2, 3, 3]}
  - {in: [[1,1,2,2,2,3,3,3],[1,2,2,3,4]], out: [1, 2, 3, 3]}
  - {in: [[], []], out: []}
  - {in: [[1, 2, 3], []], out: [1,2,3]}
  - {in: [[], [1, 2, 3]], out: []}


"ȯ":
  - {in: [[1, 2, 3]], out: 1}
  - {in: [[]], out: 0}
  - {in: ["asdf"], out: 1}
  - {in: [""], out: 0}

"ṗ":
  List:
    - in: [[1, "foo", [0]]]
      out: [[[1],["foo"],[[0]]],[[1],["foo",[0]]],[[1,"foo"],[[0]]],[[1,"foo",[0]]]]
    - in: [[1,2,3,4]]
      out: [[[1],[2],[3],[4]],[[1],[2],[3,4]],[[1],[2,3],[4]],[[1,2],[3],[4]],[[1],[2,3,4]],[[1,2,3],[4]],[[1,2],[3,4]],[[1,2,3,4]]]
  Number:
    - in: [5]
      out: [[1,1,1,1,1], [1,1,1,2], [1,1,3], [1,2,2], [1,4], [2,3], [5]]
    - {in: [0], out: [[]]}
  string:
    - {in: ["abc"], out: [["a", "b", "c"], ["a", "bc"], ["ab", "c"], ["abc"]]}

"ṙ":
  - {in: ["abc"], out: "cab"}
  - {in: [203], out: 320}
  - {in: [23049], out: 92304}
  - {in: [[1, 2, 3, 4]], out: [4, 1, 2, 3]}
  - {in: [""], out: ""}
  - {in: [[]], out: []}

"ṡ":
  - {in: [[1,2,3], [2,3]], out: [1]}
  - {in: [[1,2,3], [2,3,4]], out: [1]}
  - {in: [[1,2,3], [1,2,3]], out: []}
  - {in: [[1,2,3], [1,2,3,4]], out: []}
  - {in: [[1,2,3,4], [1,2,3]], out: [4]}
  - {in: [[], [1,2,3]], out: []}
"ṫ":
  - {in: [[1, 2, 3]], stack: [3, [1, 2]] }
  - {in: ["asdf"], stack: ["f", "asd"] }
  - {in: [[]], stack: [0, []] }
  - {in: [""], stack: ["", ""] }

"ẋ":
  Cartesian power:
    - {in: [[1, 2], 3], out: [[1, 1, 1], [1, 1, 2], [1, 2, 1], [1, 2, 2], [2, 1, 1], [2, 1, 2], [2, 2, 1], [2, 2, 2]] }
    - {in: [[1], 0], out: [[]] }
    - {in: [[], 12345], out: [] }
    - {in: ["ab", 3], out: ["aaa", "aab", "aba", "abb", "baa", "bab", "bba", "bbb"]}
  Regex search:
    - {in: ["abc", "a"], out: 0}
    - {in: ["34 + 6", "\d+"], out: 0}
    - {in: ["34 + 6", "\+"], out: 3}
    - {in: ["username@domain.com", "(?!.*@).*"], out: 9, jvm-only: true}
  Cartesian with self:
    - {in: [[], [1,2,3]], out: [[1, 1], [1, 2], [1, 3], [2, 1], [2, 2], [2, 3], [3, 1], [3, 2], [3, 3]]}


"ƒ":
  - {in: [["T", "h", "o", "n", "n", "u"], [0, 1, 0, 0, 1, 1]], out: [["T", "h"], ["o", "n", "n"], ["u"], []]}
  - {in: [[], [0, 1, 2, 3]], out: [[]]}
  - {in: [[1, 2, 3, 4], [1, 2, 3, 4]], out: [[1], [2], [3], [4], []]}

"∑":
  - {in: [[1, 2, 3, 4, 5, 6]], out: 21}
  - {in: [["abc", "def", "ghi"]], out: "abcdefghi"}
  - {in: [[[1, 2, 3], [4, 5, 6]]], out: [5, 7, 9]}

"⁾":
  - {in: [[1, 3, 2, 3, 6, 3, 3], [3, 4, 5]], out: [3, 3, 3, 3]}
  - {in: [[1, 2, 3], [4, 5, 6]], out: []}
  - {in: [[1, 2, 3], [1, 2, 3]], out: [1, 2, 3]}
  - {in: [[1, 2, 3], [1, 2, 3, 4]], out: [1, 2, 3]}
  - {in: [[1, 2, 3, 4], [1, 2, 3]], out: [1, 2, 3]}
  - {in: [[], [1, 2, 3]], out: []}
  - {in: [[1, 2, 3], []], out: []}
  - {in: [[[]],0], out: [[]]}
  - {in: [[[[[[1]]]]],3], out: [[1]]}
  - {in: ["abc", 3], out: "aaabbbccc"}
  - {in: [2, "Thonnu"], out: "TThhoonnnnuu"}


"ø⁾":
  - {in: [1, [2, 3, 4]], out: [1, 2, 3, 4, 1]}
  - {in: [["def", "ghi", "jkl"], "abc"], out: ["abc", "def", "ghi", "jkl", "abc"]}
  - {in: ["Thonnu", []], out: ["Thonnu", "Thonnu"]}
  - {in: ["Thonnu", "Thunno"], out: "ThunnoThonnuThunno"}
  - {in: ["", ""], out: ""}

"Þ⁾":
  - {in: [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10]], out: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}
  - {in: [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10,11]], out: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}
  - {in: [[1,1,2,2,2,3,3,3],[1,2,2,3]], out: [1, 2, 2, 3]}
  - {in: [[1,1,2,2,2,3,3,3],[1,2,2,3,4]], out: [1, 2, 2, 3]}
  - {in: [[], []], out: []}
  - {in: [[1, 2, 3], []], out: []}
  - {in: [[1, 1, 1], [1]], out: [1]}
  - {in: [12,234], out: [2]}
  - {in: [12,"12"], out: []}
  - {in: ["12",12], out: []}
  - {in: [[3, 3, 3, 2, 2, 2, 2], [3, 3, 3, 3, 3, 2]], out: [3, 3, 3, 2]}


"↑":
  - {in: [[5, 3, 1, 2, 4]], out: [2, 3, 1, 4, 0]}
  - {in: [[]], out: []}
  - {in: [[1, 1, 1]], out: [0, 1, 2]}
  - {in: ["thonnu"], out: [1, 3, 4, 2, 0, 5]}

"Ạ":
  - {in: [[1, 2, 3, 4], 0, 69], out: [69, 2, 3, 4]}
  - {in: [[], 0, 69], out: [69]}
  - {in: [[], 5, 69], out: [0, 0, 0, 0, 0, 69]}
  - {in: [[1, 2, 3, 4], -1, 69], out: [1, 2, 3, 69]}
  - {in: ["Hello, World", 0, "Vyxal"], out: "Vyxalello, World"}
  - {in: ["1 + 2 * 3", "[*+]", "rizz"], out: "1 rizz 2 rizz 3"}
  - {in: ["123 + 456", "\d+", "rizz"], out: "rizz + rizz"}
  - in:
    - "123 + 456 + 789"
    - "[0-9]+"
    - !vany "λ⌊d}"
    out: "246 + 912 + 1578"

"Ḅ":
  - {in: [60], out: [2, 3, 5]}
  - {in: ["AbC dEf"], out: [1, 0, 1, -1, 0, 1, 0]}
  - {in: [[1234, 5678, "aB!", "Cd?"]], out: [[2, 617], [2, 17, 167], [0, 1, -1], [1, 0, -1]]}

"Ḥ":
  - {in: ["Thonnu"], stack: ["T", "honnu"]}
  - {in: [[1, 2, 3, 4]], stack: [1, [2, 3, 4]]}
  - {in: [[]], stack: [0, []]}

"Ị":
  - {in: [[1, 2, 3, 4], 4, 5], out: [1, 2, 3, 4, 5]}
  - {in: [[1, 2, 3, 4], -1, 5], out: [1, 2, 3, 4, 5]}
  - {in: [[], 5, 69], out: [0, 0, 0, 0, 0, 69]}

"Ḷ":
  - {in: [["abc", "de", "fghi", "j"]], out: ["j", "de", "abc", "fghi"]}
  - {in: [["Thunno 2", "Vyxal", "05AB1E", "Jelly"]], out: ["Vyxal", "Jelly", "05AB1E", "Thunno 2"]}
  - {in: [[1, 2, 3, 4]], out: [1, 2, 3, 4]}
  - {in: ["Hello"], out: "Hello"}
  - {in: ["https://vyxal.github.io"], out: "https://vyxal\.github\.io"}


"Ṃ":
  -1 ** x:
    - {in: [1], out: -1}
    - {in: [0], out: 1}
    - {in: [-1], out: -1}
  Split on spaces:
    - {in: ["Hello world"], out: ["Hello", "world"]}
    - {in: ["multi space      string"], out: ["multi", "space", "", "", "", "", "", "string"]}

"ÞṂ":
  Matrix inverse:
    - in: [[[1, 2, -1], [2, 1, 2], [-1, 2, 1]]]
      out: [[0.1875, 0.25, -0.3125], [0.25, 0, 0.25], [-0.3125, 0.25, 0.1875]]
    - in: [[[5, 0], [3, 0]]] # Determinant is 0, so return same matrix back
      out: [[5, 0], [3, 0]]

"Ṛ":
  - {in: ["Thonnu"], out: "unnohT"}
  - {in: [123], out: 321}
  - {in: [[123, 456, 789]], out: [789, 456, 123]}

"Ṣ":
  - {in: [[1, 2, 3]], out: [[1], [1, 2], [2], [1, 2, 3], [2, 3], [3]]}
  - {in: [["a", "b"]], out: [["a"], ["a", "b"], ["b"]]}

"Ṭ":
  - {in: ["abcabc", "a"], out: "bcabc"}
  - {in: ["abccba", "a"], out: "bccb"}
  - {in: [123456, "123"], out: 456}
  - {in: ["123456", 123], out: "456"}
  - {in: [[1,2,3,3,2,1], [1,2,3]], out: [3,2,1]}
  - {in: [[1,2,3,4,3,2,1], 1], out: [2,3,4,3,2]}
  - {in: [["1", 2, 2, 1], 1], out: ["1", 2, 2]}
  - {in: [[1, 2, 3, 1, 2], [1,2]], out: [3]}

"²":
  - {in: [123], out: 15129}
  - {in: [[84, 104, 111, 110, 110, 117]], out: [7056, 10816, 12321, 12100, 12100, 13689]}
  - {in: ["Thunno 2"], out: ["Th", "un", "no", " 2"]}
  - {in: [""], out: []}

"⁻":
  - {in: [123], out: 1860867}
  - {in: [[84, 104, 111, 110, 110, 117]], out: [592704, 1124864, 1367631, 1331000, 1331000, 1601613]}
  - {in: ["Thunno 2"], out: ["Thu", "nno", " 2"]}
  - {in: [""], out: []}

"ɾ":
  - {in: [10], out: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}
  - {in: [[3, 2]], out: [[[1, 1], [1, 2]], [[2, 1], [2, 2]], [[3, 1], [3, 2]]]}
  - {in: ["THUNNO, thonnu!"], out: "THUNNO, THONNU!"}
  - {in: [["abc", "DEF"]], out: ["ABC", "DEF"]}
  - {in: [["Foo", 3, [2, 2]]], out: ["FOO", [1, 2, 3], [[[1, 1], [1, 2]], [[2, 1], [2, 2]]]]}
  - in:
    - !num 1ı5
    out:
    - !num 1ı0
    - !num 1ı1
    - !num 1ı2
    - !num 1ı3
    - !num 1ı4
    - !num 1ı5

"ʀ":
  - {in: [10], out: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}
  - {in: [-10], out: [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]}
  - {in: [[3, 2]], out: [[[0, 0], [0, 1]], [[1, 0], [1, 1]], [[2, 0], [2, 1]]]}
  - {in: ["THUNNO, thonnu!"], out: "thunno, thonnu!"}
  - {in: [["abc", "DEF"]], out: ["abc", "def"]}
  - {in: [["Foo", 3, [2, 2]]], out: ["foo", [0, 1, 2], [[[0, 0], [0, 1]], [[1, 0], [1, 1]]]]}
  - in:
    - !num 0ı5
    out:
    - !num 0ı0
    - !num 0ı1
    - !num 0ı2
    - !num 0ı3
    - !num 0ı4

"¬":
  - {in: [0], out: 1}
  - {in: [123], out: 0}
  - {in: [""], out: 1}
  - {in: ["abc"], out: 0}
  - {in: [[]], out: 1}
  - {in: [[123, 456, 789]], out: 0}

"∧":
  - {in: [0, 1], out: 0}
  - {in: ["abc", ""], out: ""}
  - {in: [123, 456], out: 456}
  - {in: [[1, 2, 3], [4, 5, 6]], out: [4, 5, 6]}

"∨":
  - {in: [0, 1], out: 1}
  - {in: ["abc", ""], out: "abc"}
  - {in: [123, 456], out: 123}
  - {in: [[1, 2, 3], [4, 5, 6]], out: [1, 2, 3]}

"⌐":
  - {in: [123], out: -124}
  - {in: [12.34], out: -13}
  - {in: [-1.23], out: 0}

"∴":
  - {in: [123, 456], out: 72}
  - {in: [-12.34, 56.78], out: 48}

"∵":
  - {in: [123, 456], out: 507}
  - {in: [-12.34, 56.78], out: -4}

"⊻":
  - {in: [123, 456], out: 435}
  - {in: [-12.34, 56.78], out: -52}
  - {in: ["abc", "def"], out: "abc def"}
  - {in: ["ff", ""], out: "ff "}

"«":
  - {in: [100, 3], out: 800}
  - {in: [-1.23, 0], out: -1}
  - {in: ["hello", 6], out: " hello"}
  - {in: ["hello", 0], out: "hello"}
  - {in: ["hello", 5], out: "hello"}
  - {in: ["hello", -7], out: "  hello"}

"»":
  - {in: [100, 3], out: 12}
  - {in: [-1.23, 0], out: -1}
  - {in: ["hello", 6], out: "hello "}
  - {in: ["hello", 0], out: "hello"}
  - {in: ["hello", 5], out: "hello"}
  - {in: ["hello", -7], out: "hello  "}

"Ɠ":
  - {in: [[1, 2, 3]], stack: [3, [1, 2, 3]]}

"ɠ":
  - {in: [[1, 2, 3]], stack: [1, [1, 2, 3]]}

"¯":
  - {in: [[1, 3, 2, 4]], out: [2, -1, 2]}
  - {in: [[]], out: []}

"×":
  - {in: [3,4], out: 12}
  - {in: ["abc", 3], out: "abcabcabc"}
  - {in: [[1,2,3], 3], out: [3,6,9]}
  - {in: ["Hello", "el"], out: "Hleeo"}
  - {in: ["", "stuff"], out: ""}
  - {in: ["stuff", ""], out: "stuff"}
  - in:
      - !num 1ı2
      - !num 3ı5
    out: !num 7_ı11
  

"÷":
  Numbers:
    - {in: [3, 4], out: 0.75}
    - {in: [3, 0], out: 0}
    - {in: [0, 3], out: 0}
    - {in: [3, 3], out: 1}
    - in:
        - !num 18ı8
        - !num 1ı1
      out: !num 13ı5_
  Strings and Numbers:
    - {in: ["abc", 3], out: ["a", "b", "c"]}
    - {in: [3, "abc"], out: ["a", "b", "c"]}
    - {in: ["abcdefghi", 3], out: ["abc", "def", "ghi"]}
    - {in: ["abcdefghij", 3], out: ["abc", "def", "ghi", "j"]}
    - {in: ["", 3], out: []}
  Strings:
    - {in: ["abcab", "c"], out: ["ab", "ab"]}
    - {in: ["one234five678", "\d+"], out: ["one", "five"]}


"½":
  - {in: [123], out: 61.5}
  - {in: ["abc"], out: ["a", "bc"]}

"±":
  - {in: [[-5, 0, 5]], out: [-1, 0, 1]}
  - in:
      - !num 0ı2
    out: !num 0ı1

"€":
  - {in: [[1, 2, 3, 4]], out: [[1, 2, 3, 4], [2, 3, 4], [3, 4], [4]]}

"↓":
  - {in: [[1, 2, 1, 2, 1]], out: [1, 3, 0, 2, 4]}
  - {in: [[0,1,1,0,0,1,0,1,1]], out: [1, 2, 5, 7, 8, 0, 3, 4, 6]}

"≈":
  - {in: [[1, 1, 1]], out: 1}
  - {in: [[1, 2, 1]], out: 0}
  - {in: [[]], out: 1}

"₌":
  - {in: [123, 123], out: 1}
  - {in: [123, 456], out: 0}
  - {in: ["abc", "abc"], out: 1}
  - {in: [[1, 2, 3], [1, 2, 3]], out: 1}
  - {in: [[1, 2, 3], [4, 5, 6]], out: 0}

"≠":
  - {in: [123, 123], out: 0}
  - {in: [123, 456], out: 1}
  - {in: ["abc", "abc"], out: 0}
  - {in: [[1, 2, 3], [1, 2, 3]], out: [0, 0, 0]}
  - {in: [[1, 2, 3], [4, 5, 6]], out: [1, 1, 1]}
  - {in: [[1, 2, 3], [1, 2, 1]], out: [0, 0, 1]}

"≥":
  With numbers:
    - { in: [1, 2], out: 0 }
    - { in: [1, 1], out: 1 }
    - { in: [2, 1], out: 1 }
    - { in: [1.5, 2], out: 0 }
  Should stringify:
    - { in: ["abc", 1], out: 1 }
    - { in: [20, "3"], out: 0 }
    - { in: ["ABC", "abc"], out: 0 }
  Should vectorise:
    - { in: [[1, [2, 4], -5], 3], out: [0, [0, 1], 0] }
    - { in: [[6, "foo"], [4, 20]], out: [1, 1] }

"≤":
  With numbers:
    - { in: [1, 2], out: 1 }
    - { in: [1, 1], out: 1 }
    - { in: [2, 1], out: 0 }
    - in:
        - !num 1ı50
        - 2
      out: 1
  Should stringify:
    - { in: ["abc", 1], out: 0 }
    - { in: [20, "3"], out: 1 }
    - { in: ["ABC", "abc"], out: 1 }
  Should vectorise:
    - { in: [[1, [2, 4], -5], 3], out: [1, [1, 0], 1] }
    - { in: [[6, "foo"], [4, 20]], out: [0, 0] }

"√":
  - {in: [25], out: 5.0}
  - {in: [0], out: 0.0}

"ᶿ":
  - {in: ["abc"], stack: ["cba", "abc"]}
  - {in: [[1, 2, 3]], stack: [[3, 2, 1], [1, 2, 3]]}
  - {in: [[1, 2, 3], 1], stack: [1, 1]}

"ᶲ":
  - {in: [123], out: "123"}
  - {in: ["abc"], out: "abc"}
  - {in: [[123, 456, 789]], out: "[ 123 | 456 | 789 ]"}

"…":
  - {in: [123], out: 125}
  - {in: [-1], out: 1}
  - {in: [["abc", "def", "ghi"]], out: ["a", "d", "g"]}

"ꜝ":
  - {in: [123], out: 124}
  - {in: [-1], out: 0}

"Φ":
  - {in: [[1, 2, 3, 4, 5], 3], out: [2, 3]}
  - {in: [5, [1, 2, 3, 4, 5]], out: [2, 3, 4, 5]}

"†":
  - {in: ["aaaaabbcccaabbcccccabc"], out: [5, 2, 3, 2, 2, 5, 1, 1, 1]}
  - {in: [[1, 2, 3]], out: [1, 1, 1]}
  - {in: [[]], out: []}

"Π":
  - {in: [[1,2,3,4,5]], out: 120}
  - {in: [[]], out: 1}
  - {in: [[[1,2],[3,4],[5,6]]], out: [[1, 3, 5], [1, 3, 6], [1, 4, 5], [1, 4, 6], [2, 3, 5], [2, 3, 6], [2, 4, 5], [2, 4, 6]]}
  - {in: [[[1,2],[3,4],56]], out: [[1, 3, 5], [1, 3, 6], [1, 4, 5], [1, 4, 6], [2, 3, 5], [2, 3, 6], [2, 4, 5], [2, 4, 6]]}
  - {in: [[[1,2],[3,4],[56]]], out: [[1, 3, 56], [1, 4, 56], [2, 3, 56], [2, 4, 56]]}

"⌈":
  - {in: [123.6], out: 124}
  - {in: [9], out: 9}
  - {in: [-1.23], out: -1}

"⌊":
  - {in: [123.6], out: 123}
  - {in: [9], out: 9}
  - {in: [-1.23], out: -2}
  - {in: ["123abc"], out: 123}
  - {in: [""], out: 0}
  - {in: ["-123"], out: -123}
  - {in: ["-00609"], out: -609}
  - {in: ["3.4"], out: 3.4}
  - {in: ["-3.4"], out: -3.4}
  - {in: ["-3.4abc"], out: -3.4}
  - {in: ["-a4.d24"], out: -4.24}
  - {in: ["1.2.3.4.5.6"], out: 1.23456}
  - {in: ["-3-4-5"], out: -345}
  - {in: ["abc"], out: 0}

"⁺":
  - {in: [[1,2,3]], out: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]}
  - {in: ["ab"], out: ["","a","b","ab"]}
  - {in: [123], out: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]}
  - {in: [[]], out: [[]]}

"„":
  - {in: [["Hello", "World"]], out: "Hello World"}
  - {in: [[1, 2, 3]], out: "1 2 3"}

"“":
  Lists:
    - {in: [["Hello ", "World!"]], out: "Hello World!"}
    - {in: [[1, 2, 3, 4]], out: "1234"}
    - {in: [[[1, 2, 3], ["a", "b", "c"], 4]], out: ["123", "abc", 0]}
    - {in: [2], out: 0}
    - {in: [1], out: 1}
    - {in: [0.69], out: 1}
    - {in: [0], out: 1}
    - {in: [-0.69], out: 1}
    - {in: [-1], out: 1}
    - {in: [-2], out: 0}

"”":
  - {in: [["Hello", "World"]], out: "Hello\nWorld"}
  - {in: ["amon"], out: "0000amon"}
  - {in: [""], out: ""}
  - {in: ["abcdabcd"], out: "abcdabcd"}

"∆q":
  - {in: [20], out: [2, 1]}
  - {in: [28], out: [2, 1]}
  - {in: [12], out: [2, 1]}
  - {in: [8], out: [3]}
  - {in: [1], out: []}
  - {in: [6], out: [1, 1]}
  - {in: [4], out: [2]}
  - {in: [549], out: [2, 1]}

"∆ḟ":
  - {in: [20], out: [2, 0, 1]}
  - {in: [12], out: [2, 1]}
  - {in: [28], out: [2, 0, 0, 1]}
  - {in: [8], out: [3]}
  - {in: [1], out: []}
  - {in: [6], out: [1, 1]}
  - {in: [4], out: [2]}
  - {in: [549], out: [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}


"Þo":
  - {in: [[[1,2,3],[4,5,6],[7,8,9]]], out: [[[4, 2], [5, 1, 3], [6, 2]], [[7, 1, 5], [8, 4, 2, 6], [9, 5, 3]], [[4, 8], [7, 5, 9], [8, 6]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 0], out: [[[4, 2, 1], [5, 1, 3, 2], [6, 2, 3]], [[7, 1, 5, 4], [8, 4, 2, 6, 5], [9, 5, 3, 6]], [[4, 8, 7], [7, 5, 9, 8], [8, 6, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 1], out: [[[2, 4, 1], [1, 3, 5, 2], [2, 6, 3]], [[1, 5, 7, 4], [4, 2, 6, 8, 5], [5, 3, 9, 6]], [[4, 8, 7], [7, 5, 9, 8], [8, 6, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 2], out: [[[2, 4, 1], [3, 5, 1, 2], [6, 2, 3]], [[1, 5, 7, 4], [2, 6, 8, 4, 5], [3, 9, 5, 6]], [[4, 8, 7], [5, 9, 7, 8], [6, 8, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 3], out: [[[2, 4, 1], [3, 5, 1, 2], [6, 2, 3]], [[5, 7, 1, 4], [6, 8, 4, 2, 5], [9, 5, 3, 6]], [[8, 4, 7], [9, 7, 5, 8], [8, 6, 9]]]}

"ÞO":
  - {in: [[[1,2,3],[4,5,6],[7,8,9]]], out: [[[4, 3, 7, 2], [5, 1, 8, 3], [6, 2, 9, 1]], [[7, 6, 1, 5], [8, 4, 2, 6], [9, 5, 3, 4]], [[1, 9, 4, 8], [2, 7, 5, 9], [3, 8, 6, 7]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 0], out: [[[4, 3, 7, 2, 1], [5, 1, 8, 3, 2], [6, 2, 9, 1, 3]], [[7, 6, 1, 5, 4], [8, 4, 2, 6, 5], [9, 5, 3, 4, 6]], [[1, 9, 4, 8, 7], [2, 7, 5, 9, 8], [3, 8, 6, 7, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 1], out: [[[3, 7, 2, 4, 1], [1, 8, 3, 5, 2], [2, 9, 1, 6, 3]], [[6, 1, 5, 7, 4], [4, 2, 6, 8, 5], [5, 3, 4, 9, 6]], [[9, 4, 8, 1, 7], [7, 5, 9, 2, 8], [8, 6, 7, 3, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 2], out: [[[7, 2, 4, 3, 1], [8, 3, 5, 1, 2], [9, 1, 6, 2, 3]], [[1, 5, 7, 6, 4], [2, 6, 8, 4, 5], [3, 4, 9, 5, 6]], [[4, 8, 1, 9, 7], [5, 9, 2, 7, 8], [6, 7, 3, 8, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 3], out: [[[2, 4, 3, 7, 1], [3, 5, 1, 8, 2], [1, 6, 2, 9, 3]], [[5, 7, 6, 1, 4], [6, 8, 4, 2, 5], [4, 9, 5, 3, 6]], [[8, 1, 9, 4, 7], [9, 2, 7, 5, 8], [7, 3, 8, 6, 9]]]}

"Þȯ":
  - {in: [[[1,2,3],[4,5,6],[7,8,9]]], out: [[[4, 2, 5], [5, 1, 3, 6, 4], [6, 2, 5]], [[7, 1, 5, 8, 2], [8, 4, 2, 6, 9, 1, 7, 3], [9, 5, 3, 2, 8]], [[4, 8, 5], [7, 5, 9, 4, 6], [8, 6, 5]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 0], out: [[[4, 2, 5, 1], [5, 1, 3, 6, 4, 2], [6, 2, 5, 3]], [[7, 1, 5, 8, 2, 4], [8, 4, 2, 6, 9, 1, 7, 3, 5], [9, 5, 3, 2, 8, 6]], [[4, 8, 5, 7], [7, 5, 9, 4, 6, 8], [8, 6, 5, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 1], out: [[[2, 5, 4, 1], [1, 3, 6, 4, 5, 2], [2, 5, 6, 3]], [[1, 5, 8, 2, 7, 4], [4, 2, 6, 9, 1, 7, 3, 8, 5], [5, 3, 2, 8, 9, 6]], [[4, 8, 5, 7], [7, 5, 9, 4, 6, 8], [8, 6, 5, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 2], out: [[[2, 5, 4, 1], [3, 6, 4, 5, 1, 2], [5, 6, 2, 3]], [[1, 5, 8, 2, 7, 4], [2, 6, 9, 1, 7, 3, 8, 4, 5], [3, 2, 8, 9, 5, 6]], [[4, 8, 5, 7], [5, 9, 4, 6, 7, 8], [6, 5, 8, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 3], out: [[[2, 5, 4, 1], [3, 6, 4, 5, 1, 2], [5, 6, 2, 3]], [[5, 8, 2, 7, 1, 4], [6, 9, 1, 7, 3, 8, 4, 2, 5], [2, 8, 9, 5, 3, 6]], [[8, 5, 4, 7], [9, 4, 6, 7, 5, 8], [5, 8, 6, 9]]]}

"ÞȮ":
  - {in: [[[1,2,3],[4,5,6],[7,8,9]]], out: [[[4, 3, 7, 2, 5, 9, 6, 8], [5, 1, 8, 3, 6, 7, 4, 9], [6, 2, 9, 1, 4, 8, 5, 7]], [[7, 6, 1, 5, 8, 3, 9, 2], [8, 4, 2, 6, 9, 1, 7, 3], [9, 5, 3, 4, 7, 2, 8, 1]], [[1, 9, 4, 8, 2, 6, 3, 5], [2, 7, 5, 9, 3, 4, 1, 6], [3, 8, 6, 7, 1, 5, 2, 4]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 0], out: [[[4, 3, 7, 2, 5, 9, 6, 8, 1], [5, 1, 8, 3, 6, 7, 4, 9, 2], [6, 2, 9, 1, 4, 8, 5, 7, 3]], [[7, 6, 1, 5, 8, 3, 9, 2, 4], [8, 4, 2, 6, 9, 1, 7, 3, 5], [9, 5, 3, 4, 7, 2, 8, 1, 6]], [[1, 9, 4, 8, 2, 6, 3, 5, 7], [2, 7, 5, 9, 3, 4, 1, 6, 8], [3, 8, 6, 7, 1, 5, 2, 4, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 1], out: [[[3, 7, 2, 5, 9, 6, 8, 4, 1], [1, 8, 3, 6, 7, 4, 9, 5, 2], [2, 9, 1, 4, 8, 5, 7, 6, 3]], [[6, 1, 5, 8, 3, 9, 2, 7, 4], [4, 2, 6, 9, 1, 7, 3, 8, 5], [5, 3, 4, 7, 2, 8, 1, 9, 6]], [[9, 4, 8, 2, 6, 3, 5, 1, 7], [7, 5, 9, 3, 4, 1, 6, 2, 8], [8, 6, 7, 1, 5, 2, 4, 3, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 2], out: [[[7, 2, 5, 9, 6, 8, 4, 3, 1], [8, 3, 6, 7, 4, 9, 5, 1, 2], [9, 1, 4, 8, 5, 7, 6, 2, 3]], [[1, 5, 8, 3, 9, 2, 7, 6, 4], [2, 6, 9, 1, 7, 3, 8, 4, 5], [3, 4, 7, 2, 8, 1, 9, 5, 6]], [[4, 8, 2, 6, 3, 5, 1, 9, 7], [5, 9, 3, 4, 1, 6, 2, 7, 8], [6, 7, 1, 5, 2, 4, 3, 8, 9]]]}
  - {in: [[[1,2,3],[4,5,6],[7,8,9]], 3], out: [[[2, 5, 9, 6, 8, 4, 3, 7, 1], [3, 6, 7, 4, 9, 5, 1, 8, 2], [1, 4, 8, 5, 7, 6, 2, 9, 3]], [[5, 8, 3, 9, 2, 7, 6, 1, 4], [6, 9, 1, 7, 3, 8, 4, 2, 5], [4, 7, 2, 8, 1, 9, 5, 3, 6]], [[8, 2, 6, 3, 5, 1, 9, 4, 7], [9, 3, 4, 1, 6, 2, 7, 5, 8], [7, 1, 5, 2, 4, 3, 8, 6, 9]]]}

"Þ0":
  - {in: ["69", 5], out: "00069"}
  - {in: ["69", 0], out: "69"}
  - {in: ["69", -5], out: "69000"}
  - {in: ["69", "5300"], out: "0069" }
  - {in: ["69", "0"], out: "69" }
  - {in: ["69", [1, 2, 3, 4, 5]], out: "00069"}
  - {in: [[6, 9], 5], out: [0, 0, 0, 6, 9]}
  - {in: [[6, 9], 0], out: [6, 9]}
  - {in: [[6, 9], -5], out: [6, 9, 0, 0, 0]}
  - {in: [[6, 9], "5300"], out: [0, 0, 6, 9]}
  - {in: [[6, 9], "0"], out: [6, 9]}
  - {in: [[6, 9], [1, 2, 3, 4, 5]], out: [0, 0, 0, 6, 9]}

"Þι":
  - {in: [[1,3,5,7,9]], out: [0, 3, 10, 21, 36]}

"Þκ":
  - {in: [[1,3,5,7,9]], out: [1, 6, 15, 28, 45]}

"Þ÷":
  - {in: [[1,2,3,4,5,6], 3], out: [[1, 2], [3, 4], [5, 6]]}
  - {in: [[1,2,3,4,5,6], 2], out: [[1, 2, 3], [4, 5, 6]]}
  - {in: [[1,2,3,4,5,6], 1], out: [[1, 2, 3, 4, 5, 6]]}
  - {in: [[1,2,3,4,5,6], 0], out: []}
  - {in: [[], 3], out: []}

"ÞẠ": 
  - {in: [[], [[0, 0], [1, 0], [2, 0], [0, 1], [1, 1], [2, 1]], [1, 2, 3, 4, 5, 6]], out: [[1, 4], [2, 5], [3, 6]]}
  - {in: [[], [[0, 0, 0], [0, 1, 0], [0, 2, 0], [1, 0, 0], [1, 1, 0], [1, 2, 0], [0, 0, 1], [0, 1, 1], [0, 2, 1], [1, 0, 1], [1, 1, 1], [1, 2, 1]], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], out: [[[1, 7], [2, 8], [3, 9]], [[4, 10], [5, 11], [6, 12]]]}
  - {in: [[], [1,2,3,4], 5], out: [0, [0, 0, [0, 0, 0, [0, 0, 0, 0, 5]]]]}
  - {in: [[], [1,2,3,4,[]], 5], out: [0, 5, 5, 5, 5]}
  - {in: [[], [], 1], out: []}
  - {in: [[], [2,3], [1,2,3,4]], out: [0, 0, [0, 0, 0, [1, 2, 3, 4]]]}

"Þi":
  - {in: [[1,[2,3]],[1,0]], out: 2}
  - {in: [["xyzabc"], [0,4]], out: "b"}

"∆s":
  - in:
    - - 3.1415926535897932384626433832795028841971693993751058209749445923 # π
      - 1.5707963267948966192313216916397514420985846996875529104874722961 # π/2
      - 1.0471975511965977461542144610931676280657231331250352736583148641 # π/3
      - 0.7853981633974483096156608458198757210492923498437764552437361480 # π/4
      - 0.5235987755982988730771072305465838140328615665625176368291574320 # π/6
      - !num 0ı1 # i
    out:
      - 0 # sin(π) = 0
      - 1 # sin(π/2) = 1
      - 0.8660254037844386467637231707529361834714026269051903140279034897 # sin(π/3) = √3/2
      - 0.7071067811865475244008443621048490392848359376884740365883398689 # sin(π/4) = 1/√2
      - 0.5 # sin(π/6) = 1/2
      - !num 0ı1.175201193643801456882381850595600815155717981334095870229565413 # sin(i)

"∆c":
  - in:
    - - 3.1415926535897932384626433832795028841971693993751058209749445923 # π
      - 1.5707963267948966192313216916397514420985846996875529104874722961 # π/2
      - 1.0471975511965977461542144610931676280657231331250352736583148641 # π/3
      - 0.7853981633974483096156608458198757210492923498437764552437361480 # π/4
      - 0.5235987755982988730771072305465838140328615665625176368291574320 # π/6
      - !num 0ı1 # i
    out:
      - -1 # cos(π) = -1
      - 0 # cos(π/2) = 0
      - 0.5 # cos(π/3) = 1/2
      - 0.7071067811865475244008443621048490392848359376884740365883398689 # cos(π/4) = 1/√2
      - 0.8660254037844386467637231707529361834714026269051903140279034897 # cos(π/6) = √3/2
      - 1.5430806348152437784779056207570616826015291123658637047374022147 # cos(i)

"∆t":
  - in:
    - - 3.1415926535897932384626433832795028841971693993751058209749445923 # π
      - 1.0471975511965977461542144610931676280657231331250352736583148641 # π/3
      - 0.7853981633974483096156608458198757210492923498437764552437361480 # π/4
      - 0.5235987755982988730771072305465838140328615665625176368291574320 # π/6
      - !num 0ı1 # i
    out:
      - 0 # tan(π) = 0
      - 1.7320508075688772935274463415058723669428052538103806280558069794 # tan(π/3) = √3
      - 1 # tan(π/4) = 1
      - 0.5773502691896257645091487805019574556476017512701268760186023264 # tan(π/6) = 1/√3
      - !num 0ı0.761594155955764888119458282604793590412768597257936551596810500 # tan(i)

"∆ṡ":
  - in:
    - - 0 # sin(0) = 0
      - 1 # sin(π/2) = 1
      - 0.8660254037844386467637231707529361834714026269051903140279034897 # sin(π/3) = √3/2
      - 0.7071067811865475244008443621048490392848359376884740365883398689 # sin(π/4) = 1/√2
      - 0.5 # sin(π/6) = 1/2
      - !num 0ı1.175201193643801456882381850595600815155717981334095870229565413 # sin(i)
    out:
      - 0 # 0
      - 1.5707963267948966192313216916397514420985846996875529104874722961 # π/2
      - 1.0471975511965977461542144610931676280657231331250352736583148641 # π/3
      - 0.7853981633974483096156608458198757210492923498437764552437361480 # π/4
      - 0.5235987755982988730771072305465838140328615665625176368291574320 # π/6
      - !num 0ı1 # i

"∆ċ":
  - in:
    - - -1 # cos(π) = -1
      - 0 # cos(π/2) = 0
      - 0.5 # cos(π/3) = 1/2
      - 0.7071067811865475244008443621048490392848359376884740365883398689 # cos(π/4) = 1/√2
      - 0.8660254037844386467637231707529361834714026269051903140279034897 # cos(π/6) = √3/2
      - 1.5430806348152437784779056207570616826015291123658637047374022147 # cos(-i)
    out:
      - 3.1415926535897932384626433832795028841971693993751058209749445923 # π
      - 1.5707963267948966192313216916397514420985846996875529104874722961 # π/2
      - 1.0471975511965977461542144610931676280657231331250352736583148641 # π/3
      - 0.7853981633974483096156608458198757210492923498437764552437361480 # π/4
      - 0.5235987755982988730771072305465838140328615665625176368291574320 # π/6
      - !num 0ı1_ # -i

"∆ṫ":
  - in:
    - - 0 # tan(0) = 0
      - 1.7320508075688772935274463415058723669428052538103806280558069794 # tan(π/3) = √3
      - 1 # tan(π/4) = 1
      - 0.5773502691896257645091487805019574556476017512701268760186023264 # tan(π/6) = 1/√3
      - !num 0ı0.761594155955764888119458282604793590412768597257936551596810500 # tan(i)
    out:
      - 0 # 0
      - 1.0471975511965977461542144610931676280657231331250352736583148641 # π/3
      - 0.7853981633974483096156608458198757210492923498437764552437361480 # π/4
      - 0.5235987755982988730771072305465838140328615665625176368291574320 # π/6
      - !num 0ı1 # i

"∆Ṫ":
  - in: [2, -1]
    out: 2.0344439357957027354455779231009658441271217539736731742984053848

"∆S":
  - in:
    - - 0 # 0
      - 0.6931471805599453094172321214581765680755001343602552541206800094 # ln(2)
      - !num 0ı1 # i
    out:
      - 0 # sinh(0) = 0
      - 0.75 # sinh(ln(2)) = 3/4
      - !num 0ı0.841470984807896506652502321630298999622563060798371065672751709 # sinh(i)

"∆C":
  - in:
    - - 0
      - 0.6931471805599453094172321214581765680755001343602552541206800094 # ln(2)
      - !num 0ı1 # i
    out:
      - 1 # cosh(0) = 1
      - 1.25 # cosh(ln(2)) = 5/4
      - 0.5403023058681397174009366074429766037323104206179222276700972553 # cosh(i)

"∆T":
  - in:
    - - 0
      - 0.6931471805599453094172321214581765680755001343602552541206800094 # ln(2)
      - !num 0ı1 # i
    out:
      - 0 # tanh(0) = 0
      - 0.6 # tanh(ln(2)) = 3/5
      - !num 0ı1.557407724654902230506974807458360173087250772381520038383946605 # tanh(i)

"∆<":
  - in:
    - - 1
      - -1
      - !num 0ı1
      - !num 1ı1
    out:
      - 0
      - 3.1415926535897932384626433832795028841971693993751058209749445923
      - 1.5707963267948966192313216916397514420985846996875529104874722961
      - 0.7853981633974483096156608458198757210492923498437764552437361480

"Þh":
  - {in: [[1,2,3,4]], out: [1, 4]}
  - {in: [[[1,2], 3, 4]], out: [[1, 2], 4]}
  - {in: ["hello"], out: ["h", "o"]}
  - {in: [12431], out: [1,1]}

"∆R":
  - in:
    - - 1
      - !num 3_ı5
      - !num 0ı9
    out:
      - 1
      - -3
      - 0

"∆I":
  - in:
    - - 1
      - !num 3_ı5
      - !num 0ı9
    out:
      - 0
      - 5
      - 9

"∆ṙ":
  - in:
    - - 180
      - 90
      - 60
      - 45
      - 30
    out:
      - 3.1415926535897932384626433832795028841971693993751058209749445923 # π
      - 1.5707963267948966192313216916397514420985846996875529104874722961 # π/2
      - 1.0471975511965977461542144610931676280657231331250352736583148641 # π/3
      - 0.7853981633974483096156608458198757210492923498437764552437361480 # π/4
      - 0.5235987755982988730771072305465838140328615665625176368291574320 # π/6

"∆ḋ":
  - in:
    - - 3.1415926535897932384626433832795028841971693993751058209749445923 # π
      - 1.5707963267948966192313216916397514420985846996875529104874722961 # π/2
      - 1.0471975511965977461542144610931676280657231331250352736583148641 # π/3
      - 0.7853981633974483096156608458198757210492923498437764552437361480 # π/4
      - 0.5235987755982988730771072305465838140328615665625176368291574320 # π/6
    out:
      - 180
      - 90
      - 60
      - 45
      - 30

"∆L":
  - {in: [3, 5], out: 15}
  - {in: [[3, 2], 5], out: 30}

"ÞR":
  - {in: [[1, 2, 3], [2, 3]], out: [[1, 2, 3], [1, 2, 3]]}
  - {in: [9, [3, 3]], out: [[9, 9, 9], [9, 9, 9], [9, 9, 9]]}
  - {in: [[1, 2, 3], [5]], out: [1, 2, 3, 1, 2]}
  - {in: [[5, 6, 2], []], out: 5}
